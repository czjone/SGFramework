// automatically generated by the FlatBuffers compiler, do not modify

package SGFGameConfigs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")public final class PublicSvrConfig extends Table {
  public static PublicSvrConfig getRootAsPublicSvrConfig(ByteBuffer _bb) { return getRootAsPublicSvrConfig(_bb, new PublicSvrConfig()); }
  public static PublicSvrConfig getRootAsPublicSvrConfig(ByteBuffer _bb, PublicSvrConfig obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public PublicSvrConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String host() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer hostAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer hostInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String port() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer portAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer portInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String db() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer dbAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer dbInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createPublicSvrConfig(FlatBufferBuilder builder,
      int hostOffset,
      int portOffset,
      int dbOffset) {
    builder.startObject(3);
    PublicSvrConfig.addDb(builder, dbOffset);
    PublicSvrConfig.addPort(builder, portOffset);
    PublicSvrConfig.addHost(builder, hostOffset);
    return PublicSvrConfig.endPublicSvrConfig(builder);
  }

  public static void startPublicSvrConfig(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addHost(FlatBufferBuilder builder, int hostOffset) { builder.addOffset(0, hostOffset, 0); }
  public static void addPort(FlatBufferBuilder builder, int portOffset) { builder.addOffset(1, portOffset, 0); }
  public static void addDb(FlatBufferBuilder builder, int dbOffset) { builder.addOffset(2, dbOffset, 0); }
  public static int endPublicSvrConfig(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

