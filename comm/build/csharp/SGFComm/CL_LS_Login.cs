// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SGFComm
{

using global::System;
using global::FlatBuffers;

////////////////////////////// login ////////////////////////
public struct CL_LS_Login : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CL_LS_Login GetRootAsCL_LS_Login(ByteBuffer _bb) { return GetRootAsCL_LS_Login(_bb, new CL_LS_Login()); }
  public static CL_LS_Login GetRootAsCL_LS_Login(ByteBuffer _bb, CL_LS_Login obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CL_LS_Login __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Accounts { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAccountsBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetAccountsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetAccountsArray() { return __p.__vector_as_array<byte>(4); }
  public string Password { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPasswordBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetPasswordBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPasswordArray() { return __p.__vector_as_array<byte>(6); }
  public string Nicename { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNicenameBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetNicenameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNicenameArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<CL_LS_Login> CreateCL_LS_Login(FlatBufferBuilder builder,
      StringOffset accountsOffset = default(StringOffset),
      StringOffset passwordOffset = default(StringOffset),
      StringOffset nicenameOffset = default(StringOffset)) {
    builder.StartObject(3);
    CL_LS_Login.AddNicename(builder, nicenameOffset);
    CL_LS_Login.AddPassword(builder, passwordOffset);
    CL_LS_Login.AddAccounts(builder, accountsOffset);
    return CL_LS_Login.EndCL_LS_Login(builder);
  }

  public static void StartCL_LS_Login(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAccounts(FlatBufferBuilder builder, StringOffset accountsOffset) { builder.AddOffset(0, accountsOffset.Value, 0); }
  public static void AddPassword(FlatBufferBuilder builder, StringOffset passwordOffset) { builder.AddOffset(1, passwordOffset.Value, 0); }
  public static void AddNicename(FlatBufferBuilder builder, StringOffset nicenameOffset) { builder.AddOffset(2, nicenameOffset.Value, 0); }
  public static Offset<CL_LS_Login> EndCL_LS_Login(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CL_LS_Login>(o);
  }
  public static void FinishCL_LS_LoginBuffer(FlatBufferBuilder builder, Offset<CL_LS_Login> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedCL_LS_LoginBuffer(FlatBufferBuilder builder, Offset<CL_LS_Login> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
