// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SGFComm
{

using global::System;
using global::FlatBuffers;

public struct CL_GS_Login : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CL_GS_Login GetRootAsCL_GS_Login(ByteBuffer _bb) { return GetRootAsCL_GS_Login(_bb, new CL_GS_Login()); }
  public static CL_GS_Login GetRootAsCL_GS_Login(ByteBuffer _bb, CL_GS_Login obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CL_GS_Login __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Token { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTokenBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetTokenBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTokenArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<CL_GS_Login> CreateCL_GS_Login(FlatBufferBuilder builder,
      StringOffset tokenOffset = default(StringOffset)) {
    builder.StartObject(1);
    CL_GS_Login.AddToken(builder, tokenOffset);
    return CL_GS_Login.EndCL_GS_Login(builder);
  }

  public static void StartCL_GS_Login(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddToken(FlatBufferBuilder builder, StringOffset tokenOffset) { builder.AddOffset(0, tokenOffset.Value, 0); }
  public static Offset<CL_GS_Login> EndCL_GS_Login(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CL_GS_Login>(o);
  }
};


}
